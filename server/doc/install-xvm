Installing a test scripts server on XVM
=======================================

It's useful to have a less secure scripts server for testing
purposes.  Here's what you have to do:

1. Creating the VM
------------------

To authenticate to xvm.mit.edu with root tickets, you need
a browser that suppors SPNEGO;  Firefox is one such browser and
the following instructions will assume it.  Browse to about:config
and modify the key 'network.negotiate-auth.trusted-uris' to be

    https://xvm.mit.edu:442/*

Then, with active root tickets on your system, navigate to

    https://xvm.mit.edu:442/

You should be logged in as root, and if you are on scripts-root
you should be able to assign ownership to scripts.

[XXX: there should be a way to do this with remctl too]

2. Configure
------------

Lest you be tempted to skimp on RAM:  you must have more than 1 GB
to install Fedora; 2048MB is a good amount is a good amount to give to
the server.  Disk space on order of 40G is probably good enough.

Create a VM using the web interface but do not boot it. From the
command line with suitable tickets, run

remctl xvm-remote control $server install mirror=http://mirrors.mit.edu/fedora/linux/ dist=30 arch=x86_64 ks=https://raw.githubusercontent.com/mit-scripts/scripts/ansible-realserver/server/fedora/ks/xvm.txt

Watch the installation progress with

ssh $server@xvm-console.mit.edu

When the installation finishes, the VM will shut down. Boot it with
the web interface or

remctl xvm-remote control $server create

You will need to log in using the serial console or VNC console using
"root" with no password. sshd will not accept root logins until you
install a public key.

3. Debugging
------------

Get dropped into dracut:#/ ?  Check for 'Warn' in dmesg (dmesg | grep Warn)
and fix any problems that are stopping Dracut from proceeding.

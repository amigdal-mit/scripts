---
- name: Run munin as non-root
  lineinfile:
    path: /etc/munin/munin-node.conf
    regexp: '^#?\s*{{ item.split()[0] }}\s'
    line: "{{ item }}"
  loop:
    - user munin
    - group munin
  notify: restart munin-node
- name: Install htpasswd
  dnf: name=httpd-tools state=present
- name: Generate password
  check_mode: no
  shell: cat /etc/munin/apache-passwd {% if not ansible_check_mode %}|| (umask go-rwx && openssl rand -hex 32 | tee /etc/munin/apache-passwd && exit 254){% endif %}
  register: password
  failed_when: not ansible_check_mode and password.rc not in (0, 254)
  changed_when: password.rc != 0
- name: Generate htpasswd line
  check_mode: no
  command: htpasswd -ni munin
  args:
    stdin: "{{password.stdout}}"
  changed_when: false
  register: htpasswd
- name: Update htpasswd file
  copy:
    dest: /etc/munin/apache-htpasswd
    content: "{{htpasswd.stdout}}"
    mode: 0600
    owner: apache
  notify: reconfigure munin-node
- name: Configure apache plugins
  copy:
    dest: /etc/munin/plugin-conf.d/{{ item }}
    content: |
      [{{ item }}]
      env.url http://munin:{{password.stdout}}@127.0.0.1:%d/server-status/?auto
    mode: 0600
    owner: munin
  loop:
    - apache_accesses
    - apache_processes
    - apache_volume
  notify: reconfigure munin-node
- name: Run certain munin plugins as root
  copy:
    dest: /etc/munin/plugin-conf.d/zzz-scripts
    content: |
      [postfix*]
      user root
      env.logfile maillog
      env.logdir /var/log
      command sudo -E %c

      [sendmail]
      user root
      env.mspqueue /var/spool/clientmqueue
      command sudo -E %c
      
      [smart_*]
      user root
      command sudo %c

      [sensors_*]
      user root
      command sudo %c

      [if_*]
      user root
      command sudo -E %c
      env.PATH /usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin
  notify: reconfigure munin-node

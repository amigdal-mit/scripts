---
# TODO: On Debian, `update-initramfs -u` needs to run after .link files change
- name: Remove network-scripts and NetworkManager
  package:
    name:
      - network-scripts
      - NetworkManager
    state: absent
- name: lo
  block:
    - copy:
        dest: /etc/systemd/network/10-lo.network
        content: |
          [Match]
          Name=lo

          [Address]
          Address=127.0.0.1/8
          {{ lo_extra }}
      notify: restart systemd-networkd
- name: Disable ARP for lo aliases
  when: lo_extra
  copy:
    dest: /etc/sysctl.d/99-scripts-arp.conf
    content: |
      # arp_ignore = 1 and arp_announce = 2
      # prevent us from responding to ARP requests for lo addresses
      net.ipv4.conf.default.arp_ignore = 1
      net.ipv4.conf.default.arp_announce = 2
      net.ipv4.conf.all.arp_ignore = 1
      net.ipv4.conf.all.arp_announce = 2
  notify: apply sysctl
- name: vlan486
  block:
    - when: vlan486_hwaddr is defined
      copy:
        dest: /etc/systemd/network/10-vlan486.link
        content: |
          [Match]
          MACAddress={{vlan486_hwaddr}}

          [Link]
          Description=Public (VLAN 486)
          Name=vlan486
      notify:
        - reboot
        - network changed
    - copy:
        dest: /etc/systemd/network/10-vlan486.network
        content: |
          [Match]
          MACAddress={{vlan486_hwaddr | default(ansible_default_ipv4.macaddress)}}

          [Network]
          {% if vlan486_address is defined %}
          Address={{vlan486_address}}/24

          [Route]
          Gateway=18.4.86.1
          {% else %}
          DHCP=ipv4
          {% endif %}

          {{ vlan486_extra }}
      notify:
        - restart systemd-networkd
        - network changed
    - file:
        path: /etc/systemd/network/10-vlan486.network.d/
        state: directory
    - stat:
        path: /etc/systemd/network/10-vlan486.network.d/dns.conf
      register: dns_conf
    - name: Configure temporary DNS servers
      copy:
        dest: /etc/systemd/network/10-vlan486.network.d/tempdns.conf
        content: |
          [Network]
          {% for ip in mit_dns_servers %}
          DNS={{ip}}
          {% endfor %}
          Domains=mit.edu
      when: not dns_conf.stat.exists
      notify:
        - restart systemd-networkd
        - network changed
    - name: Remove old network config files
      file:
        path: "{{item}}"
        state: absent
      loop:
        - /etc/sysconfig/network-scripts/ifcfg-{{ansible_default_ipv4.interface}}
        - /etc/sysconfig/network-scripts/ifcfg-eth0
        - /etc/sysconfig/network-scripts/ifcfg-vlan486
        - /etc/network/interfaces
- name: vlan461
  when: vlan461_address is defined and vlan461_hwaddr is defined
  block:
    - copy:
        dest: /etc/systemd/network/10-vlan461.link
        content: |
          [Match]
          MACAddress={{vlan461_hwaddr}}

          [Link]
          Description=Backend (VLAN 461)
          Name=vlan461
      notify:
        - reboot
        - network changed
    - copy:
        dest: /etc/systemd/network/10-vlan461.network
        content: |
          [Match]
          Name=vlan461

          [Address]
          Address={{vlan461_address}}/24

          {% for hostname in (groups['sql'] + groups['scripts-real'])|sort %}
          {% with info = hostvars[hostname] %}
          {% if info['vlan486_address'] | default(False) and info['vlan461_address'] | default(False) %}
          [Route]
          Destination={{ info['vlan486_address'] }}
          Gateway={{ info['vlan461_address'] }}
          {% endif %}
          {% endwith %}
          {% endfor %}
      notify:
        - restart systemd-networkd
        - network changed
    - name: Remove network-scripts config file
      file:
        path: "{{item}}"
        state: absent
      loop:
        - /etc/sysconfig/network-scripts/ifcfg-eth1
        - /etc/sysconfig/network-scripts/ifcfg-vlan461
- name: Enable systemd-networkd
  systemd:
    name: systemd-networkd
    enabled: yes


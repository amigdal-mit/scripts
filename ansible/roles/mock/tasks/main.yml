---
- name: Install mock and build dependencies
  dnf:
    name:
      - mock
      - redhat-lsb-core
      - rpmdevtools
      - cabal-install
      - rubygems
      - autoconf
    state: present
- name: Disable setuid binaries in mock
  copy:
    dest: /etc/systemd/system/var-lib-mock.service
    content: |
      [Unit]
      Description=Mock build directory nosuid bind mount
      After=local-fs.target
      # This wants to be a [Mount], but due to
      # https://bugs.freedesktop.org/show_bug.cgi?id=53205
      # we can't actually achieve the desired effect.
      [Service]
      Type=oneshot
      RemainAfterExit=true
      ExecStart=/bin/mount -B /var/lib/mock /var/lib/mock
      ExecStart=/bin/mount -o remount,nosuid /var/lib/mock
      ExecStop=/bin/umount /var/lib/mock
      [Install]
      WantedBy=multi-user.target
  notify: restart var-lib-mock
- name: Restrict mock to root
  block:
  - lineinfile:
      path: /etc/pam.d/mock
      insertafter: EOF
      line: "{{ item }}"
    loop:
      - "auth	required	pam_deny.so"
      - "account	required	pam_deny.so"
  - replace:
      path: /etc/pam.d/mock
      regexp: '^(auth|account)\s+.*\s+system-auth'
- name: Configure mock chroots
  vars:
    releasever: "{{ item[0] }}"
    arch: "{{ item[1] }}"
  template:
    src: chroot.cfg.j2
    dest: /etc/mock/scripts-fc{{ releasever }}-{{ arch }}.cfg
  loop:
    - ["{{ ansible_distribution_major_version }}", "x86_64"]
    - ["{{ ansible_distribution_major_version }}", "i686"]
- name: Create local RPM repo
  file:
    path: /home/scripts-build/mock-local/
    owner: scripts-build
    state: directory
- stat:
    path: /home/scripts-build/mock-local/repodata/repomd.xml
  register: md_st
- find:
    paths: /home/scripts-build/mock-local/
    patterns: "*.rpm"
  register: rpm_st
- name: Generate repo metadata
  command: /usr/bin/createrepo /home/scripts-build/mock-local/
  become: yes
  become_user: scripts-build
  when: (not md_st.stat.exists) or (rpm_st.files and ((rpm_st.files|map(attribute='mtime')|max) > md_st.stat.mtime))
